<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssg.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="com.ssg.pojo.Student" >
            <id column="SNO" jdbcType="VARCHAR" property="SNO" />
        <result column="SNAME" jdbcType="VARCHAR" property="SNAME" />
        <result column="SPWD" jdbcType="VARCHAR" property="SPWD" />
        <result column="SSEX" jdbcType="CHAR" property="SSEX" />
        <result column="SBIRTH" jdbcType="VARCHAR" property="SBIRTH" />
        <result column="SCHOOL" jdbcType="VARCHAR" property="SCHOOL" />
        <result column="CLASSES" jdbcType="VARCHAR" property="CLASSES" />
    </resultMap>

    <sql id="Base_Column_List">
    SNO, SNAME, SPWD , SSEX , SBIRTH , SCHOOL , CLASSES
    </sql>

    <select id="login" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where SNO = #{SNO,jdbcType=VARCHAR}
    </select>
    <!--根据班级与学生名获取指定/全部学生信息列表-->
    <select id="selectAll" parameterType="student" resultType="com.ssg.pojo.Student">
            SELECT SNO, SNAME, SSEX, SBIRTH, CLASSES
            FROM student
        </select>

    <!-- 根据学号查询指定学生信息 -->
    <select id="findBySno" resultType="student" parameterType="com.ssg.pojo.Student">
            SELECT SNO, SNAME, SSEX, SBIRTH, CLASSES
            FROM student
            WHERE SNO = #{SNO}
        </select>

    <!-- 添加学生信息 -->
    <insert id="insert" parameterType="student">
            INSERT INTO
            student(SNO, SNAME, SSEX, SBIRTH, CLASSES)
            VALUES
            (#{SNO}, #{SNAME}, #{SSEX}, #{SBIRTH}, #{CLASSES})
        </insert>

    <!-- 根据id修改指定学生信息 -->
    <update id="update" parameterType="student">
        update student
        <set>
            <if test="sName != null">SNAME=#{SNAME},</if>
            <if test="sSex != null">SSEX=#{SSEX},</if>
            <if test="sBirth != null">SBIRTH=#{SBIRTH},</if>
            <if test="classes != null">CLASSES=#{CLASSES}</if>
        </set>
        where SNO = #{SNO}
    </update>

    <!-- 根据id批量删除指定学生信息 -->
    <delete id="deleteById">
        DELETE FROM
        student
        WHERE
        SNO = #{SNO}
    </delete>
</mapper>